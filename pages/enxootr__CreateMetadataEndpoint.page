<apex:page controller="enxootr.CreateMetadataEndpointController" showHeader="{!IF($CurrentPage.Parameters.ShowHeader == '1', true, false)}" sidebar="false" standardStylesheets="true" lightningStylesheets="true" action="{!checkMetadataAPIConnection}">
    <script>
function createRemoteSite()
{
	// Disable button
	document.getElementById('createremotesitebtn').disabled = true;
	// Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
	var binding = new XMLHttpRequest();
	var request =
		'<?xml version="1.0" encoding="utf-8"?>' +
		'<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
			'<env:Header>' +
				'<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' +
					'<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' +
				'</urn:SessionHeader>' +
			'</env:Header>' +
			'<env:Body>' +
				'<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' +
					'<metadata xsi:type="RemoteSiteSetting">' +
						'<fullName>{!RemoteSiteName}</fullName>' +
						'<description>Metadata API Remote Site Setting for TestRunner application</description>' +
						'<disableProtocolSecurity>false</disableProtocolSecurity>' +
						'<isActive>true</isActive>' +
						'<url>https://{!Host}</url>' +
					'</metadata>' +
				'</createMetadata>' +
			'</env:Body>' +
		'</env:Envelope>';
	binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
	binding.setRequestHeader('SOAPAction','""');
	binding.setRequestHeader('Content-Type', 'text/xml');
	binding.onreadystatechange =
		function() {
			if(this.readyState === 4) {
				var parser = new DOMParser();
				var doc  = parser.parseFromString(this.response, 'application/xml');
				var errors = doc.getElementsByTagName('errors');
				var messageText = '';
				for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
					messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
				displayMetadataResponse(messageText);
			}
		}
	binding.send(request);
}
</script>
    <body class="homeTab">
    <apex:form id="myForm">
        <apex:actionFunction name="displayMetadataResponse" action="{!displayMetadataResponse}" rerender="myForm">
            <apex:param name="metadataResponse" assignTo="{!metadataResponse}" value="{!metadataResponse}"/>
        </apex:actionFunction>
        <apex:sectionHeader title="TestRunner" subtitle="Welcome"/>
        <apex:pageMessages />
        <apex:outputPanel rendered="{!MetadataConnectionWarning}">
            <h1>Important Post Install Step:</h1>
            <p>TestRunner uses Metadata API to make process of adding new Organizations-to-be-tested records easier.</p>
            <p> Click the <b>Create Remote Site Setting</b> button to have Metadata API access created automatically. You will have to do it only once.</p>
            <input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
            <p>You can also perform it manually. Please add <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>https://{!Host}</b></p>

        </apex:outputPanel>
        <apex:outputPanel rendered="{!!MetadataConnectionWarning}">
            <h1>No action needed</h1>
            <p>TestRunner uses Metadata API to make process of adding new Organizations-to-be-tested records easier.</p>
            <p>It looks like everything is already configured on your Organization and no action is needed. Have a good time using TestRunner!</p>

        </apex:outputPanel>
        <apex:outputPanel rendered="{!MetadataConnectionWarning}">
            <p style="color:gray">DEBUG USE ONLY: {!metadataApiException}</p>
        </apex:outputPanel>
    </apex:form>
    </body>
</apex:page>