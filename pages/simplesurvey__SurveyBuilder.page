<apex:page id="pg" contentType="{!IF($CurrentPage.parameters.step == null, 'text/html', 'text/plain')}" showHeader="false" standardStylesheets="false" sidebar="false" applyHtmlTag="false" applyBodyTag="false" docType="{!IF($CurrentPage.parameters.step == null, 'html-5.0', '')}" cache="false">
    <apex:includeScript value="/support/console/42.0/integration.js"/>
    <!-- Setting the title does not work from within the SurveyBuilder component (necessary since applyHtmlTag = false) -->
    <apex:outputPanel layout="none" rendered="{!$CurrentPage.parameters.step == null}"><title>Survey Builder</title></apex:outputPanel>

    <!-- Common includes, header, and SurveyBuilder application wrapper -->
    <c:SurveyBuilder rendered="{!$CurrentPage.parameters.step == null}"/>

    <!-- Wrapper has extra padding for footer buttons -->
    <div class="slds-p-bottom_x-large">
        <!-- Current step in SurveyBuilder application wrapper -->
    	<c:SurveyBuilderChooseSurvey rendered="{!$CurrentPage.parameters.step == 'choose_survey'}"/>
    	<c:SurveyBuilderSurveyObject rendered="{!$CurrentPage.parameters.step == 'configure_survey_object'}"/>
    	<c:SurveyBuilderAddQuestions rendered="{!$CurrentPage.parameters.step == 'add_questions'}"/>
        <c:SurveyBuilderBranding rendered="{!$CurrentPage.parameters.step == 'branding'}"/>
    	<c:SurveyBuilderEmailTemplate rendered="{!$CurrentPage.parameters.step == 'create_email_template'}"/>
    </div>

    <script type="application/javascript">
        // Polyfills

        // String.repeat - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat
        if (!String.prototype.repeat) {
            String.prototype.repeat = function(count) {
                'use strict';
                if (this == null) {
                    throw new TypeError('can\'t convert ' + this + ' to object');
                }

                var str = '' + this;
                // To convert string to integer.
                count = +count;
                // Check NaN
                if(count != count) {
                    count = 0;
                }


                if(count < 0) {
                    throw new RangeError('repeat count must be non-negative');
                }
                    

                if(count == Infinity) {
                    throw new RangeError('repeat count must be less than infinity');
                }
                

                count = Math.floor(count);
                if(str.length == 0 || count == 0) {
                    return '';
                }


                // Ensuring count is a 31-bit integer allows us to heavily optimize the
                // main part. But anyway, most current (August 2014) browsers can't handle
                // strings 1 << 28 chars or longer, so:
                if(str.length * count >= 1 << 28) {
                    throw new RangeError('repeat count must not overflow maximum string size');
                }
                

                var maxCount = str.length * count;
                count = Math.floor(Math.log(count) / Math.log(2));
                while (count) {
                str += str;
                count--;
                }
                str += str.substring(0, maxCount - str.length);
                return str;
            }
            }
    </script>
</apex:page>