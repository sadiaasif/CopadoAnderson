<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <constants>
        <name>asa</name>
        <dataType>Number</dataType>
        <value>
            <numberValue>21.0</numberValue>
        </value>
    </constants>
    <decisions>
        <name>For_testing</name>
        <label>For testing</label>
        <locationX>93</locationX>
        <locationY>472</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Test_client</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getFRUP.box__Record_ID__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>0016f00002deW7rAAE</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getOldCases</targetReference>
            </connector>
            <label>Test client</label>
        </rules>
    </decisions>
    <decisions>
        <name>ifCaseANDTaskExists</name>
        <label>ifCaseANDTaskExists</label>
        <locationX>426</locationX>
        <locationY>518</locationY>
        <defaultConnectorLabel>Default</defaultConnectorLabel>
        <rules>
            <name>updateCaseandTask</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getOldCases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getOldTasks</targetReference>
            </connector>
            <label>updateCaseandTask</label>
        </rules>
        <rules>
            <name>Create_Case_and_Task</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getOldCases</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateNewCase</targetReference>
            </connector>
            <label>Create Case and Task</label>
        </rules>
    </decisions>
    <decisions>
        <name>TaskStatusCheck</name>
        <label>TaskStatusCheck</label>
        <locationX>495</locationX>
        <locationY>158</locationY>
        <defaultConnector>
            <targetReference>UpdateTaskRecords</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IfCompleted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>getOldTasks.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getOldTasks.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>CheckforTaskDescription</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateNewTaskIfCompleted</targetReference>
            </connector>
            <label>IfCompleted</label>
        </rules>
    </decisions>
    <decisions>
        <name>ValidateNewCaseCreated</name>
        <label>ValidateNewCaseCreated</label>
        <locationX>876</locationX>
        <locationY>519</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IfNewCaseCreated</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CaseRecordId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CreateTask</targetReference>
            </connector>
            <label>IfNewCaseCreated</label>
        </rules>
    </decisions>
    <formulas>
        <name>CheckforCaseDescription</name>
        <dataType>Boolean</dataType>
        <expression>If(Contains({!getOldCases.Description},{!FolderName}),True,False)</expression>
    </formulas>
    <formulas>
        <name>CheckforTaskDescription</name>
        <dataType>Boolean</dataType>
        <expression>IF(Contains({!getOldTasks.Description},{!FolderName}),True,False)</expression>
    </formulas>
    <formulas>
        <name>Description</name>
        <dataType>String</dataType>
        <expression>TEXT({!$Flow.CurrentDate})+&apos;- &apos;+&apos;File Uploaded to &apos;+ {!FolderName} +&apos;  folder&apos;</expression>
    </formulas>
    <formulas>
        <name>OldCaseDescription</name>
        <dataType>String</dataType>
        <expression>{!getOldCases.Description}</expression>
    </formulas>
    <formulas>
        <name>Wait</name>
        <dataType>DateTime</dataType>
        <expression>{!$Flow.CurrentDateTime} - (1/24)</expression>
    </formulas>
    <interviewLabel>Box Listener- Create Case and task(scheduled) {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Box Listener- Create Case and task(scheduled)</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>CreateNewCase</name>
        <label>CreateNewCase</label>
        <locationX>641</locationX>
        <locationY>513</locationY>
        <assignRecordIdToReference>CaseRecordId</assignRecordIdToReference>
        <connector>
            <targetReference>ValidateNewCaseCreated</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>getFRUP.box__Record_ID__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>NewCaseDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>BoxQueue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>CaseRecordType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Box Notification</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordCreates>
    <recordCreates>
        <name>CreateNewTaskIfCompleted</name>
        <label>CreateNewTaskIfCompleted</label>
        <locationX>812</locationX>
        <locationY>50</locationY>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>BoxQueue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>File Uploaded in Client&apos;s Box Account</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>getOldCases.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>CreateTask</name>
        <label>CreateTask</label>
        <locationX>883</locationX>
        <locationY>331</locationY>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>BoxQueue</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>TaskRecordType</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>File Uploaded in Client&apos;s Box Account</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>CaseRecordId</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getFRUP</name>
        <label>getFRUP</label>
        <locationX>122</locationX>
        <locationY>283</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>For_testing</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>box__Folder_ID__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>FolderId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>box__FRUP__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getOldCases</name>
        <label>getOldCases</label>
        <locationX>260</locationX>
        <locationY>517</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>ifCaseANDTaskExists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getFRUP.box__Record_ID__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Box Notification</stringValue>
            </value>
        </filters>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>0127b0000004wV0</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getOldTasks</name>
        <label>getOldTasks</label>
        <locationX>480</locationX>
        <locationY>324</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>TaskStatusCheck</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>WhatId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getOldCases.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>File Uploaded in Client&apos;s Box Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>UpdateTaskRecords</name>
        <label>UpdateTaskRecords</label>
        <locationX>821</locationX>
        <locationY>192</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getOldTasks.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Subject</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>File Uploaded in Client&apos;s Box Account</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>AddCaseDescription</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>File Uploaded in Client&apos;s Box Account</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>getOldCases.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordUpdates>
    <start>
        <locationX>15</locationX>
        <locationY>21</locationY>
        <connector>
            <targetReference>Wait_Wait1hour</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <textTemplates>
        <name>AddCaseDescription</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!getOldCases.Description}
{!Description}</text>
    </textTemplates>
    <variables>
        <name>ads</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>asdf</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>21.0</numberValue>
        </value>
    </variables>
    <variables>
        <name>BoxQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>00G6f000005wBri</stringValue>
        </value>
    </variables>
    <variables>
        <name>caserecod</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>CaseRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>CaseRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>0126f000001lF9rAAE</stringValue>
        </value>
    </variables>
    <variables>
        <name>CaseSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Box Updated</stringValue>
        </value>
    </variables>
    <variables>
        <name>FolderId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>FolderName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>loopvariable</name>
        <dataType>Number</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <description>This case is to notify if a file is uploaded in Box</description>
        <name>NewCaseDescription</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>This case is to notify if a file is uploaded in Box</stringValue>
        </value>
    </variables>
    <variables>
        <name>NewCaseSubject</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Box Created</stringValue>
        </value>
    </variables>
    <variables>
        <name>qazws</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>TaskRecordType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>012U0000000g5s9IAA</stringValue>
        </value>
    </variables>
    <waits>
        <name>Wait_Wait1hour</name>
        <label>Wait (Wait1hour)</label>
        <locationX>146</locationX>
        <locationY>151</locationY>
        <defaultConnectorLabel>Default Path</defaultConnectorLabel>
        <waitEvents>
            <name>Instant_Pause</name>
            <conditionLogic>and</conditionLogic>
            <connector>
                <targetReference>getFRUP</targetReference>
            </connector>
            <eventType>AlarmEvent</eventType>
            <inputParameters>
                <name>AlarmTime</name>
                <value>
                    <elementReference>Wait</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffset</name>
                <value>
                    <numberValue>1.0</numberValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>TimeOffsetUnit</name>
                <value>
                    <stringValue>Hours</stringValue>
                </value>
            </inputParameters>
            <label>Instant Pause</label>
        </waitEvents>
    </waits>
</Flow>
