<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_Owner</name>
        <label>Email Owner</label>
        <locationX>270</locationX>
        <locationY>506</locationY>
        <actionName>Refund__c.Refund_Notification_Email</actionName>
        <actionType>emailAlert</actionType>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>varRefundId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>Send_Email_Client</name>
        <label>Email Client</label>
        <locationX>675</locationX>
        <locationY>244</locationY>
        <actionName>Refund__c.Refund_Completed_Email_to_Client</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>CreateEmail_Task</targetReference>
        </connector>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>varRefundId</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <decisions>
        <description>Check if there is a value in the client email field. If not, don&apos;t attempt to send an email.</description>
        <name>CheckClientEmail</name>
        <label>CheckClientEmail</label>
        <locationX>667</locationX>
        <locationY>51</locationY>
        <defaultConnectorLabel>No Email</defaultConnectorLabel>
        <rules>
            <name>Email_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recVarRefund.Client_s_Email__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Send_Email_Client</targetReference>
            </connector>
            <label>Email Exists</label>
        </rules>
    </decisions>
    <decisions>
        <description>Check if the current user is the email recipient. If so, then no need to send an email.</description>
        <name>CheckCurrentUser</name>
        <label>CheckCurrentUser</label>
        <locationX>263</locationX>
        <locationY>313</locationY>
        <defaultConnectorLabel>Don&apos;t Send Email</defaultConnectorLabel>
        <rules>
            <name>Send_Email</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recVarRefund.OwnerId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>fmCurrentUser</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Owner</targetReference>
            </connector>
            <label>Send Email</label>
        </rules>
    </decisions>
    <decisions>
        <name>CheckStatus</name>
        <label>CheckStatus</label>
        <locationX>412</locationX>
        <locationY>52</locationY>
        <defaultConnector>
            <targetReference>CheckCurrentUser</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Email Owner</defaultConnectorLabel>
        <rules>
            <name>Email_Client</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recVarRefund.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed - Includes Refund</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>CheckClientEmail</targetReference>
            </connector>
            <label>Email Client</label>
        </rules>
        <rules>
            <name>Completed_No_Refund</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recVarRefund.Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Completed - No Refund Included</stringValue>
                </rightValue>
            </conditions>
            <label>Completed - No Refund</label>
        </rules>
    </decisions>
    <formulas>
        <name>fmCurrentUser</name>
        <dataType>String</dataType>
        <expression>CASESAFEID({!$User.Id})</expression>
    </formulas>
    <formulas>
        <name>fmTaskComments</name>
        <dataType>String</dataType>
        <expression>&quot;This task was created to log that a client email was sent for the refund&quot;</expression>
    </formulas>
    <interviewLabel>Refund - Emails on Status Change {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Refund - Emails on Status Change</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>Create a completed Task on the client to record the email that was sent.</description>
        <name>CreateEmail_Task</name>
        <label>CreateEmail Task</label>
        <locationX>675</locationX>
        <locationY>402</locationY>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Email: Anderson Business Advisors: Refund Completed</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>Call</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Update_Comments__c</field>
            <value>
                <elementReference>fmTaskComments</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhatId</field>
            <value>
                <elementReference>recVarRefund.Id</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
    </recordCreates>
    <recordLookups>
        <name>GetRefund</name>
        <label>GetRefund</label>
        <locationX>199</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CheckStatus</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>varRefundId</elementReference>
            </value>
        </filters>
        <object>Refund__c</object>
        <outputReference>recVarRefund</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Status__c</queriedFields>
        <queriedFields>OwnerId</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>Client_s_Email__c</queriedFields>
    </recordLookups>
    <startElementReference>GetRefund</startElementReference>
    <status>Active</status>
    <variables>
        <name>recVarRefund</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Refund__c</objectType>
    </variables>
    <variables>
        <name>varRefundId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
